// <auto-generated />
using ChatServer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChatServer.Migrations
{
    [DbContext(typeof(UserDatabaseContext))]
    [Migration("20190515145542_update1")]
    partial class update1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("ChatServer.Models.Message", b =>
                {
                    b.Property<long>("MessageId")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("FromUserId");

                    b.Property<bool>("IsSend");

                    b.Property<string>("MessageContext")
                        .IsRequired();

                    b.Property<byte>("MsgType");

                    b.Property<long>("TargetUserId");

                    b.Property<long>("Time");

                    b.HasKey("MessageId");

                    b.HasIndex("FromUserId");

                    b.HasIndex("TargetUserId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("ChatServer.Models.Users", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NickName");

                    b.Property<byte>("OnLineStatus");

                    b.Property<string>("PassWord");

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChatServer.Models.Message", b =>
                {
                    b.HasOne("ChatServer.Models.Users", "FromUser")
                        .WithMany("MessageFromUser")
                        .HasForeignKey("FromUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ChatServer.Models.Users", "TargetUser")
                        .WithMany("MessageTargetUser")
                        .HasForeignKey("TargetUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
